
@using XposLIMS.Models
@using FormMethod = System.Web.Mvc.FormMethod
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}


<div class="row">
    <div class="col-md-6">
        <section id="loginForm" >
            @using (Html.BeginForm("Login", "Account", 
                new { ReturnUrl = ViewBag.ReturnUrl }, 
                FormMethod.Post, 
                new { @class = "form-horizontal", role = "form", id = "loginform" }))
            {
                @Html.AntiForgeryToken()
                
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div id="div-login-msg">
                    <div id="icon-login-msg" class="glyphicon glyphicon-chevron-right modal-title-icon"></div>
                    <span id="text-login-msg">Type your username and password.</span>
                </div>
               

                <div style="margin-bottom: 10px; margin-top: 10px" class="input-group">
                    <span class="input-group-addon user-icon">
                        <img src="~/Content/icons/user.png" alt=""/>
                    </span>
                    
                    @Html.TextBoxFor(m => m.UserName, new {@class = "form-control", placeholder = "UserName"})
                    @Html.ValidationMessageFor(m => m.UserName, "", new {@class = "text-danger"})
                </div>

                <div style="margin-bottom: 5px" class="input-group">
                    <span class="input-group-addon lock-icon">
                        <img src="~/Content/icons/password.png" alt="" />
                    </span>
                    <span id="fakePwdWrapper"></span>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <div style="margin-bottom: 15px" class="input-group">
                    <div class="col-md-offset-2 col-md-12 remeber-me">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe, new {id = "chkRememberMe"})
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-bottom: 0px">
                    
                    <div class="col-md-offset-2 col-md-10">
                       
                        <button class="btn pull-right button-cancel" onclick="return false;" data-toggle="modal" data-target="#ModalLogin">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            Cancel
                        </button>
                        
                        <button type="submit" class="btn btn-primary pull-right button-login">
                            <i class="glyphicon glyphicon-log-in"></i>
                            Login
                        </button>
                    </div>
                </div>
                
            }
        </section>
    </div>
    
</div>

    <script>
        $(document)
            .ready(function() {

                var tmpPwdInput = '<input id="pwdFakeInput" type="password" style="display: none;"/>';
                if ($("#chkRememberMe").is(":checked")) {
                    $("#pwdFakeInput").remove();
                } else {
                    $(tmpPwdInput).appendTo($("#fakePwdWrapper"));
                }

                $("#chkRememberMe")
                    .on("change",
                        function() {
                            if ($(this).is(":checked")) {
                                $("#pwdFakeInput").remove();
                            } else {                                
                                $(tmpPwdInput).appendTo($("#fakePwdWrapper"));
                            }
                        });
            });
    </script>
    
